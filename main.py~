#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Tue Aug 26 17:27:54 2014
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class HoofdScherm(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: HoofdScherm.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Tool Bar
        self.hoofdscherm_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL | wx.TB_TEXT)
        self.SetToolBar(self.hoofdscherm_toolbar)
        self.hoofdscherm_toolbar.AddLabelTool(wx.ID_ANY, _("Open sourcefile.."), wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.hoofdscherm_toolbar.AddSeparator()
        self.hoofdscherm_toolbar.AddLabelTool(wx.ID_ANY, _("Compile"), wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        # Tool Bar end
        self.SourceCode = sourcecode(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB | wx.TE_MULTILINE | wx.TE_RICH)
        self.notebook_2 = wx.Notebook(self, wx.ID_ANY, style=0)
        self.notebook_2_pane_1 = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.SyntaxTree = syntaxtree(self.notebook_2_pane_1, wx.ID_ANY, _(""), style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB | wx.TE_MULTILINE | wx.TE_READONLY)
        self.notebook_2_pane_2 = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.TaC = tac(self.notebook_2_pane_2, wx.ID_ANY, _(""), style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB | wx.TE_MULTILINE | wx.TE_READONLY)
        self.notebook_2_pane_3 = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.Assembly = assembly(self.notebook_2_pane_3, wx.ID_ANY, _(""), style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB | wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.sourcefile, id=wx.ID_ANY)
        self.Bind(wx.EVT_TOOL, self.compile, id=wx.ID_ANY)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: HoofdScherm.__set_properties
        self.SetTitle(_("Tiny Compiler by Filip Moons (VUB, 2014)"))
        self.SetSize((997, 635))
        self.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Lucida Grande"))
        self.hoofdscherm_toolbar.Realize()
        self.SourceCode.SetMinSize((480, 570))
        self.SourceCode.SetFont(wx.Font(13, wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Courier"))
        self.SyntaxTree.SetMinSize((490, 550))
        self.SyntaxTree.SetFont(wx.Font(13, wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Courier"))
        self.TaC.SetMinSize((490, 550))
        self.TaC.SetFont(wx.Font(13, wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Courier"))
        self.Assembly.SetMinSize((490, 550))
        self.Assembly.SetFont(wx.Font(13, wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Courier"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: HoofdScherm.__do_layout
        grid_sizer_1 = wx.GridSizer(1, 2, 9, 0)
        sizer_1_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(self.SourceCode, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(self.SyntaxTree, 0, 0, 0)
        self.notebook_2_pane_1.SetSizer(sizer_1)
        sizer_1_copy.Add(self.TaC, 0, 0, 0)
        self.notebook_2_pane_2.SetSizer(sizer_1_copy)
        sizer_1_copy_1.Add(self.Assembly, 0, 0, 0)
        self.notebook_2_pane_3.SetSizer(sizer_1_copy_1)
        self.notebook_2.AddPage(self.notebook_2_pane_1, _("Syntax Tree"))
        self.notebook_2.AddPage(self.notebook_2_pane_2, _("Three Address Code"))
        self.notebook_2.AddPage(self.notebook_2_pane_3, _("Assembly Code"))
        grid_sizer_1.Add(self.notebook_2, 1, wx.EXPAND, 0)
        self.SetSizer(grid_sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def sourcefile(self, event):  # wxGlade: HoofdScherm.<event_handler>
        print "Event handler 'sourcefile' not implemented!"
        event.Skip()

    def compile(self, event):  # wxGlade: HoofdScherm.<event_handler>
        print "Event handler 'compile' not implemented!"
        hoofdscherm.self.Source.Code.write("Hello!")
        event.Skip()

# end of class HoofdScherm
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    hoofdscherm = HoofdScherm(None, wx.ID_ANY, "")
    app.SetTopWindow(hoofdscherm)
    hoofdscherm.Show()
    app.MainLoop()

